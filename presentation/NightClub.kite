
type Name = String
type Age = Int
type Gender = Bool

type Person = (Name, (Age, Gender))

name = fst
age = fst . snd
gender = snd . snd

bouncer :: [Person -> Bool] -> Person -> String
bouncer = |rules, person| -> {
  name (person) ++  if and $ map (($ person), rules)
                     then " is welcome"
                     else " must leave"
}

rules :: [Person -> Bool]
rules = [
  (>=18) . age,
  gender
]

entrance :: Person -> String
entrance = bouncer (rules)

main = -> {
  alice = ("Alice", (22, True))
  bob = ("Bob", (18, False))
  eve = ("Eve", (15, True))

  print $ entrance (alice)
  print $ entrance (bob)
  print $ entrance (eve)
}